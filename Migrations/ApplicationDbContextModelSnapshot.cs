// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using movie_restful_api_csharp.Data;

#nullable disable

namespace movie_restful_api_csharp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("movie_system_csharp.Models.GenreModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TmdbId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Explosions, Guns & Violence",
                            Title = "Action",
                            TmdbId = 28
                        },
                        new
                        {
                            Id = 2,
                            Description = "Explore new things",
                            Title = "Adventure",
                            TmdbId = 12
                        },
                        new
                        {
                            Id = 3,
                            Description = "Let ur drawings come to life",
                            Title = "Animation",
                            TmdbId = 16
                        },
                        new
                        {
                            Id = 4,
                            Description = "Jokes & laughter",
                            Title = "Comedy",
                            TmdbId = 35
                        },
                        new
                        {
                            Id = 5,
                            Description = "Murder mystery's & underground societys",
                            Title = "Crime",
                            TmdbId = 80
                        },
                        new
                        {
                            Id = 6,
                            Description = "Learn about reality & its wonders",
                            Title = "Documentary",
                            TmdbId = 99
                        },
                        new
                        {
                            Id = 7,
                            Description = "conflict, emotional, social or otherwise",
                            Title = "Drama",
                            TmdbId = 18
                        },
                        new
                        {
                            Id = 8,
                            Description = "fun for the whole family",
                            Title = "Family",
                            TmdbId = 10751
                        },
                        new
                        {
                            Id = 9,
                            Description = "Dragons, Elfs & Magic",
                            Title = "Fantasy",
                            TmdbId = 14
                        },
                        new
                        {
                            Id = 10,
                            Description = "A look back at our history",
                            Title = "History",
                            TmdbId = 36
                        },
                        new
                        {
                            Id = 11,
                            Description = "Terror, Schock & everyhing that makes u scream",
                            Title = "Horror",
                            TmdbId = 27
                        },
                        new
                        {
                            Id = 12,
                            Description = "Musicals & Melody",
                            Title = "Music",
                            TmdbId = 10402
                        },
                        new
                        {
                            Id = 13,
                            Description = "What where and how? lets find out",
                            Title = "Mystery",
                            TmdbId = 9648
                        },
                        new
                        {
                            Id = 14,
                            Description = "a love afair",
                            Title = "Romance",
                            TmdbId = 10749
                        },
                        new
                        {
                            Id = 15,
                            Description = "futuristic lands & techolegy",
                            Title = "Science Fiction",
                            TmdbId = 878
                        },
                        new
                        {
                            Id = 16,
                            Description = "Ur favorit Tv show made a movie",
                            Title = "TV Movie",
                            TmdbId = 10770
                        },
                        new
                        {
                            Id = 17,
                            Description = "Suspense, excitement, surprise, anticipation and anxiety",
                            Title = "Thriller",
                            TmdbId = 53
                        },
                        new
                        {
                            Id = 18,
                            Description = "Warfare & battles",
                            Title = "War",
                            TmdbId = 10752
                        },
                        new
                        {
                            Id = 19,
                            Description = "Cowboys, Cowgirls & Bandits",
                            Title = "Western",
                            TmdbId = 37
                        });
                });

            modelBuilder.Entity("movie_system_csharp.Models.LikedGenreModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("UserId");

                    b.ToTable("LikedGenres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GenreId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            GenreId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            GenreId = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            GenreId = 4,
                            UserId = 3
                        },
                        new
                        {
                            Id = 5,
                            GenreId = 5,
                            UserId = 3
                        },
                        new
                        {
                            Id = 6,
                            GenreId = 6,
                            UserId = 3
                        },
                        new
                        {
                            Id = 7,
                            GenreId = 7,
                            UserId = 4
                        },
                        new
                        {
                            Id = 8,
                            GenreId = 8,
                            UserId = 4
                        },
                        new
                        {
                            Id = 9,
                            GenreId = 9,
                            UserId = 4
                        },
                        new
                        {
                            Id = 10,
                            GenreId = 10,
                            UserId = 4
                        },
                        new
                        {
                            Id = 11,
                            GenreId = 11,
                            UserId = 5
                        },
                        new
                        {
                            Id = 12,
                            GenreId = 12,
                            UserId = 5
                        },
                        new
                        {
                            Id = 13,
                            GenreId = 13,
                            UserId = 5
                        },
                        new
                        {
                            Id = 14,
                            GenreId = 14,
                            UserId = 5
                        },
                        new
                        {
                            Id = 15,
                            GenreId = 15,
                            UserId = 5
                        });
                });

            modelBuilder.Entity("movie_system_csharp.Models.MovieGenreModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieGenres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GenreId = 1,
                            MovieId = 1
                        },
                        new
                        {
                            Id = 2,
                            GenreId = 2,
                            MovieId = 1
                        },
                        new
                        {
                            Id = 3,
                            GenreId = 3,
                            MovieId = 1
                        },
                        new
                        {
                            Id = 4,
                            GenreId = 4,
                            MovieId = 2
                        },
                        new
                        {
                            Id = 5,
                            GenreId = 5,
                            MovieId = 2
                        },
                        new
                        {
                            Id = 6,
                            GenreId = 6,
                            MovieId = 2
                        },
                        new
                        {
                            Id = 7,
                            GenreId = 7,
                            MovieId = 3
                        },
                        new
                        {
                            Id = 8,
                            GenreId = 8,
                            MovieId = 3
                        },
                        new
                        {
                            Id = 9,
                            GenreId = 9,
                            MovieId = 3
                        },
                        new
                        {
                            Id = 10,
                            GenreId = 10,
                            MovieId = 4
                        },
                        new
                        {
                            Id = 11,
                            GenreId = 11,
                            MovieId = 4
                        },
                        new
                        {
                            Id = 12,
                            GenreId = 12,
                            MovieId = 4
                        },
                        new
                        {
                            Id = 13,
                            GenreId = 13,
                            MovieId = 5
                        },
                        new
                        {
                            Id = 14,
                            GenreId = 14,
                            MovieId = 5
                        },
                        new
                        {
                            Id = 15,
                            GenreId = 15,
                            MovieId = 5
                        });
                });

            modelBuilder.Entity("movie_system_csharp.Models.MovieModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Link")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Moveis");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Link = 128,
                            Rating = 10,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Link = 128,
                            Rating = 5,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Link = 26587,
                            Rating = 7,
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            Link = 128,
                            Rating = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 5,
                            Link = 26587,
                            Rating = 9,
                            UserId = 3
                        },
                        new
                        {
                            Id = 6,
                            Link = 101,
                            Rating = 5,
                            UserId = 3
                        },
                        new
                        {
                            Id = 7,
                            Link = 128,
                            Rating = 6,
                            UserId = 4
                        },
                        new
                        {
                            Id = 8,
                            Link = 128,
                            Rating = 9,
                            UserId = 5
                        });
                });

            modelBuilder.Entity("movie_system_csharp.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Jhon@Doe.com",
                            FirstName = "John",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Elon@Tusk.com",
                            FirstName = "Elon",
                            LastName = "Tusk"
                        },
                        new
                        {
                            Id = 3,
                            Email = "Peter@Panda.com",
                            FirstName = "Peter",
                            LastName = "Panda"
                        },
                        new
                        {
                            Id = 4,
                            Email = "Sara@Smith.com",
                            FirstName = "Sara",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 5,
                            Email = "Harry@Pilsner.com",
                            FirstName = "Harry",
                            LastName = "Pilsner"
                        });
                });

            modelBuilder.Entity("movie_system_csharp.Models.LikedGenreModel", b =>
                {
                    b.HasOne("movie_system_csharp.Models.GenreModel", "Genres")
                        .WithMany("LikedGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("movie_system_csharp.Models.UserModel", "Users")
                        .WithMany("LikedGenres")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genres");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("movie_system_csharp.Models.MovieGenreModel", b =>
                {
                    b.HasOne("movie_system_csharp.Models.GenreModel", "Genres")
                        .WithMany("MovieGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("movie_system_csharp.Models.MovieModel", "Movies")
                        .WithMany("MovieGenres")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genres");

                    b.Navigation("Movies");
                });

            modelBuilder.Entity("movie_system_csharp.Models.MovieModel", b =>
                {
                    b.HasOne("movie_system_csharp.Models.UserModel", "Users")
                        .WithMany("Movies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("movie_system_csharp.Models.GenreModel", b =>
                {
                    b.Navigation("LikedGenres");

                    b.Navigation("MovieGenres");
                });

            modelBuilder.Entity("movie_system_csharp.Models.MovieModel", b =>
                {
                    b.Navigation("MovieGenres");
                });

            modelBuilder.Entity("movie_system_csharp.Models.UserModel", b =>
                {
                    b.Navigation("LikedGenres");

                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
